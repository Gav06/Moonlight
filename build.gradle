buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

group = 'dev'
version = '1.0'
archivesBaseName = 'moonlight'

configurations {
    shade
}

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    coreMod = "dev.moonlight.mixin.MoonlightMixins"
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public'
    }
}

dependencies {
    shade("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    shade("org.slick2d:slick2d-core:1.0.2") {
        exclude module: 'lwjgl'
        exclude module: "jogg"
        exclude module: "jorbis"
    }

    implementation configurations.shade
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'moonlight.refmap.json'
}

jar {
    manifest.attributes(
            'MixinConfigs': 'moonlight.mixins.json',
            'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLCorePlugin': 'dev.moonlight.mixin.MoonlightMixins',
            'ForceLoadAsMod': 'true',
    )

    from {
        configurations.shade.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}